#!/bin/bash

TOKENIZERS_PARALLELISM=false
#export ROCBLAS_TENSILE_LIBPATH=/code/library

#export ROCBLAS_LAYER=2
CMD="/workspace/onnxruntime/build/Release/onnxruntime/transformers/benchmark.py"
#EXTRA_FLAGS=" -d results.txt -t 1"
EXTRA_FLAGS=" -d results.txt "


PROVIDER="rocm"
DISABLE_FLAGS=" --disable_embed_layer_norm "

# python3 /workspace/onnxruntime/build/Release/onnxruntime/transformers/benchmark.py -g -m bert-base-cased --sequence_length 384  --batch_sizes 1 --provider=migraphx -p fp16  --disable_gelu --disable_layer_norm --disable_attention --disable_skip_layer_norm --disable_embed_layer_norm --disable_bias_skip_layer_norm --disable_bias_gelu
# python3 /code/onnxruntime/build/Release/onnxruntime/transformers/benchmark.py -g -m bert-base-cased --sequence_length 384  --batch_sizes 1 --provider=rocm -p fp16  --disable_embed_layer_norm

rm -rf onnx_models/*

for bs in {1,2,4,8,16,24,32,64,128,256}
do
  for sl in {16,32,64,128,256,384,512}
    do
      python3 $CMD -g -m bert-base-cased --sequence_length $sl --batch_sizes $bs --provider=$PROVIDER -p fp16 $DISABLE_FLAGS $EXTRA_FLAGS
    done
done

for bs in {1,2,4,8,16,24,32,64,128}
do
  for sl in {16,32,64,128,256,384,512}
  do
    python $CMD -g -m bert-large-uncased --sequence_length $sl --batch_sizes $bs --provider=$PROVIDER -p fp16 $DISABLE_FLAGS $EXTRA_FLAGS
  done
done
##

for bs in {1,2,4,8,16,24,32}
do
  for sl in {16,32,64,128,256,384,512}
  do
    python $CMD -g -m distilgpt2 --sequence_length $sl --batch_sizes $bs --provider=$PROVIDER -p fp16 $DISABLE_FLAGS $EXTRA_FLAGS
  done
done

