#!/bin/bash

#set -x

LOGFILE=./mlir.perf.$1
LOGSUMMARYFILE=./mlir_summary.perf.$1
DRIVERPATH="/opt/rocm/bin/migraphx-driver"
#DRIVERPATH="/workspace/AMDMIGraphX/build/bin/migraphx-driver"

export HIP_FORCE_DEV_KERNARG=1

echo "###########################################" >>  $LOGFILE
echo "New Run $(pwd)" >>  $LOGFILE
date >> $LOGFILE
echo "GPU: $(rocminfo |grep -o -m 1 'gfx.*')" >> $LOGFILE
echo "MIGX: $($DRIVERPATH --version)" >> $LOGFILE
echo "MIGX Commit: $(git -C /workspace/AMDMIGraphX log -n 1  --pretty=oneline)" >> $LOGFILE
ls -l /etc/alternatives |grep "rocm ->" >> $LOGFILE
echo "###########################################" >>  $LOGFILE

COUNTER=0

function run_test {
    title=$1
    env_vars=$2
    modelname=$3
    modelparms=$4
    modeldatatype=$5

    (( COUNTER++ ))

    echo "TEST: $COUNTER, $title $env_vars $modelname $modelparms $modeldatatype" >> $LOGFILE

    ( if [ -n "$env_vars" ]; then export $env_vars; fi; time $DRIVERPATH perf $modelname $modelparms $modeldatatype ) 2>&1 |tee raw_perf.txt
    cat raw_perf.txt |sed -n '/Summary:/,$p'  >>  $LOGFILE

    runtime=$(tail raw_perf.txt |grep "real"|cut -f2- )
    totaltime=$(grep 'Total time:' raw_perf.txt|cut -d ' ' -f 3 |cut -d 'm' -f 1)
    echo "TEST: $COUNTER, $runtime, $title, $modelname, $modelparms, $modeldatatype, $totaltime" >> $LOGSUMMARYFILE
}

# MIGRAPHX_MLIR_TRACE=1 MIGRAPHX_TRACE_BENCHMARKING=2
# MIGRAPHX_PROBLEM_CACHE=/workspace/perf.json

while read testcase params
do
    if [[ $testcase =~ ^# ]]; then
        continue;
    fi

    for datatype in " " "--fp16" "--fp16 --int8" "--int8" "--fp8" ; do
    #for datatype in "--fp16" ; do

        run_test "DEFAULT" "" "$testcase" "$params" "$datatype"
        run_test "EXHAUSTIVE TUNE" "" "$testcase" "$params --exhaustive-tune" "$datatype"
        run_test "NHWC NOTUNE" "MIGRAPHX_ENABLE_NHWC=1" "$testcase" "$params " "$datatype"
        run_test "EXHAUSTIVE TUNE NHWC" "MIGRAPHX_ENABLE_NHWC=1" "$testcase" "$params --exhaustive-tune" "$datatype"
        run_test "MODEL rocBLAS" "MIGRAPHX_DISABLE_MLIR=1" $testcase "$params --exhaustive-tune" "$datatype"
        run_test "MODEL hipBLAS" "MIGRAPHX_DISABLE_MLIR=1 MIGRAPHX_ENABLE_HIPBLASLT_GEMM=1" $testcase "$params --exhaustive-tune" "$datatype"
        run_test "MODEL hipBLAS GT" "MIGRAPHX_DISABLE_MLIR=1 MIGRAPHX_ENABLE_HIPBLASLT_GEMM=1 MIGRAPHX_ENABLE_HIP_GEMM_TUNING=1" $testcase "$params --exhaustive-tune" "$datatype"

        #run_test "MODEl  CK" "MIGRAPHX_ENABLE_CK=1 MIGRAPHX_DISABLE_MLIR=1" $testcase "$params --exhaustive-tune" "$datatype"
        #run_test "MLIR(ATN)" "MIGRAPHX_MLIR_USE_SPECIFIC_OPS=attention" $testcase "$params  --exhaustive-tune" "$datatype"
        #run_test "MLIR(FSD_CON CNV )" "MIGRAPHX_MLIR_USE_SPECIFIC_OPS=fused_convolution,convolution" $testcase "$params  --exhaustive-tune" "$datatype"
        #run_test "MLIR(DOT FUS_DOT)" "MIGRAPHX_MLIR_USE_SPECIFIC_OPS=dot,fused_dot" $testcase "$params --exhaustive-tune" "$datatype"
        #run_test "MLIR(FSD CNV DOT)" "MIGRAPHX_MLIR_USE_SPECIFIC_OPS=fused,convolution,dot" $testcase "$params --exhaustive-tune" "$datatype"
        #run_test "MLIR(ATN)" "MIGRAPHX_MLIR_USE_SPECIFIC_OPS=attention" $testcase "$params --exhaustive-tune" "$datatype"

    done

done <<TESTLIST
/models/mlperf/resnet50_v1.onnx --batch 1
/models/mlperf/resnet50_v1.onnx --batch 64
/models/mlperf/resnet50_v1.onnx --batch 512
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 1 384
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 64 384 --batch 64
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 256 384 --batch 256
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 1 32
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 64 32 --batch 64
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 1 384
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 32 384 --batch 32
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 256 384 --batch 256
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 1 32
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 32 32 --batch 32
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 1 384
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 16 384 --batch 16
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 256 384 --batch 256
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 1 32
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 16 32 --batch 16
/models/onnx-model-zoo/gpt2-10.onnx --batch 1
/models/sd/unet/model.onnx --input-dim @sample 2 4 64 64 @timestep 1 @encoder_hidden_states 2 64 1024
/models/sd/unet/model.onnx --input-dim @sample 8 4 64 64 @timestep 1 @encoder_hidden_states 8 64 1024 --batch 4
/models/sd/unet/model.onnx --input-dim @sample 64 4 64 64 @timestep 1 @encoder_hidden_states 64 64 1024 --batch 32
/models/sdxl/unet/model.onnx --input-dim @sample 2 4 128 128 @timestep 1 @encoder_hidden_states 2 77 2048 @time_ids 2 6 @text_embeds 2 1280
/models/bert/bertsquad-12.onnx --fill1 input_ids:0 --fill1 input_mask:0 --fill1 segment_ids:0
/models/mlperf/bert_large_mlperf.onnx --fill1 input_ids --fill1 input_mask --fill1 segment_ids
/models/torchvision/resnet50i64.onnx --batch 64
/models/torchvision/densenet121i32.onnx --batch 32
/models/torchvision/inceptioni32.onnx --batch 32
/models/cadene/inceptionv4i16.onnx --batch 16
/models/cadene/resnext101_64x4di16.onnx --batch 16
/models/slim/mobilenet_i64.pb --batch 64
/models/slim/nasnet_i64.pb --batch 64
/models/slim/resnet50v2_i64.pb --batch 64
/models/huggingface-transformers/bert_mrpc8.onnx --fill1 input.1 --fill1 input.5 --fill1 onnx::Unsqueeze_1 --onnx --batch 8
/models/tf-misc/bert_mrpc1.pb --fill1 input_ids_1 --fill1 segment_ids_1 --fill1 input_mask_1 --tf --batch 1
/models/pytorch-examples/wlang_gru.onnx --fill0 input.1 --onnx
/models/pytorch-examples/wlang_lstm.onnx --fill0 input.1 --onnx
/models/torchvision/resnet50i1.onnx
/models/torchvision/inceptioni1.onnx
/models/cadene/dpn92i1.onnx
/models/cadene/resnext101_64x4di1.onnx
/models/slim/vgg16_i1.pb
/models/slim/mobilenet_i1.pb
/models/slim/inceptionv4_i1.pb
/models/onnx-misc/taau_low_res_downsample_d2s_for_infer_time_fp16_opset11.onnx --input-dim @inputs 1 1920 1080 8
/models/agentmodel/AgentModel.onnx
/models/bert/bert-large-uncased.onnx --input-dim @input_ids 32 32 @attention_mask 32 32 @token_type_ids 32 32 --fill1 input_ids attention_mask token_type_ids --batch 32
/models/bert/bert-large-uncased.onnx --input-dim @input_ids 32 384 @attention_mask 32 384 @token_type_ids 32 384 --fill1 input_ids attention_mask token_type_ids --batch 32
/models/bert/bert-large-uncased.onnx --input-dim @input_ids 1 32 @attention_mask 1 32 @token_type_ids 1 32 --fill1 input_ids attention_mask token_type_ids
/models/bert/bert-large-uncased.onnx --input-dim @input_ids 1 384 @attention_mask 1 384 @token_type_ids 1 384 --fill1 input_ids attention_mask token_type_ids

TESTLIST
