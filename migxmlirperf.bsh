#!/bin/bash

set -x 

LOGFILE=./mlir.perf
LOGSUMMARYFILE=./mlir_summary.perf
#DRIVERPATH="/opt/rocm/bin/migraphx-driver"
DRIVERPATH="/workspace/AMDMIGraphX/build/bin/migraphx-driver"

export HIP_FORCE_DEV_KERNARG=1

echo "###########################################" >>  $LOGFILE
echo "New Run $(pwd)" >>  $LOGFILE
date >> $LOGFILE
echo "GPU: $(rocminfo |grep -o -m 1 'gfx.*')" >> $LOGFILE
echo "MIGX: $($DRIVERPATH --version)" >> $LOGFILE
echo "MIGX Commit: $(git -C /workspace/AMDMIGraphX log -n 1  --pretty=oneline)" >> $LOGFILE
ls -l /etc/alternatives |grep "rocm ->" >> $LOGFILE
echo "###########################################" >>  $LOGFILE

COUNTER=0

while read testcase params
do
    if [[ $testcase =~ ^# ]]; then
        continue;
    fi

    for datatype in " " "--fp16" "--fp16 --int8" ; do
	(( COUNTER++ ))
        echo "TEST: $COUNTER, DEFAULT $testcase $params $datatype" >> $LOGFILE
        (time $DRIVERPATH perf $testcase $params $datatype ) 2>&1 |tee raw_perf.txt
        cat raw_perf.txt |sed -n '/Summary:/,$p'  >>  $LOGFILE
        echo "TEST: $COUNTER, $(tail raw_perf.txt |grep "real"|cut -f2- ), DEFAULT   , $testcase, $params, $datatype, $(grep 'Total time:' raw_perf.txt|cut -d ' ' -f 3 |cut -d 'm' -f 1) " >> $LOGSUMMARYFILE
        #sleep 5
#
	#(( COUNTER++ ))
        #echo "TEST: $COUNTER, MODEL EXHAUSTIVE TUNE $testcase $params $datatype" >> $LOGFILE
        #(time $DRIVERPATH perf $testcase $params  --exhaustive-tune $datatype ) 2>&1 |tee raw_perf.txt
        #cat raw_perf.txt |sed -n '/Summary:/,$p'  >>  $LOGFILE
        #echo "TEST: $COUNTER, $(tail raw_perf.txt |grep "real"|cut -f2- ), MODEL TUNE MLIR, $testcase, $params, $datatype, $(grep 'Total time:' raw_perf.txt) " >> $LOGSUMMARYFILE
        #sleep 5
#
	#(( COUNTER++ ))
        #echo "TEST: $COUNTER, MODEL EXTRA MLIR $testcase $params $datatype" >> $LOGFILE
        #(time MIGRAPHX_ENABLE_EXTRA_MLIR=1 $DRIVERPATH perf $testcase $params $datatype ) 2>&1 |tee raw_perf.txt
        #cat raw_perf.txt |sed -n '/Summary:/,$p'  >>  $LOGFILE
	#echo "TEST: $COUNTER, $(tail raw_perf.txt |grep "real"|cut -f2- ), MODEL EXTRA MLIR, $testcase, $params, $datatype, $(grep 'Total time:' raw_perf.txt) " >> $LOGSUMMARYFILE
        #sleep 5
#
	#(( COUNTER++ ))
        #echo "TEST: $COUNTER, MODEL BLAS $testcase $params $datatype" >> $LOGFILE
        #(time MIGRAPHX_DISABLE_MLIR=1 MIGRAPHX_USE_ROCBLAS_TUNING_API=1 $DRIVERPATH perf $testcase $params $datatype --exhaustive-tune ) 2>&1 |tee raw_perf.txt
        #cat raw_perf.txt |sed -n '/Summary:/,$p'  >>  $LOGFILE
	#echo "TEST: $COUNTER, $(tail raw_perf.txt |grep "real"|cut -f2- ), MODEL BLAS, $testcase, $params, $datatype, $(grep 'Total time:' raw_perf.txt) " >> $LOGSUMMARYFILE
        #sleep 5
#
	#(( COUNTER++ ))
        #echo "TEST: $COUNTER, MODEl  CK $testcase $params $datatype" >> $LOGFILE
        #(time MIGRAPHX_ENABLE_CK=1 MIGRAPHX_DISABLE_MLIR=1 $DRIVERPATH perf $testcase $params $datatype --exhaustive-tune ) 2>&1 |tee raw_perf.txt
        #cat raw_perf.txt |sed -n '/Summary:/,$p'  >>  $LOGFILE
	#echo "TEST: $COUNTER, $(tail raw_perf.txt |grep "real"|cut -f2- ), MODEl  CK, $testcase, $params, $datatype, $(grep 'Total time:' raw_perf.txt) " >> $LOGSUMMARYFILE
        #sleep 5
#
        #(( COUNTER++ ))
        #echo "TEST: $COUNTER,  MLIR(FSD ATN CNV DOT) $testcase $params $datatype" >> $LOGFILE
        #(time MIGRAPHX_MLIR_USE_SPECIFIC_OPS=fused,attention,convolution,dot $DRIVERPATH perf $testcase $params $datatype ) 2>&1 |tee raw_perf.txt
        #cat raw_perf.txt |sed -n '/Summary:/,$p'  >>  $LOGFILE
	#echo "TEST: $COUNTER, $(tail raw_perf.txt |grep "real"|cut -f2- ), MLIR(FSD ATN CNV DOT), $testcase, $params, $datatype, $(grep 'Total time:' raw_perf.txt) " >> $LOGSUMMARYFILE
        #sleep 5
#
        #(( COUNTER++ ))
        #echo "TEST: $COUNTER,   MLIR(FSD CNV DOT)$testcase $params $datatype" >> $LOGFILE
        #(time MIGRAPHX_MLIR_USE_SPECIFIC_OPS=fused,convolution,dot $DRIVERPATH perf $testcase $params $datatype ) 2>&1 |tee raw_perf.txt
        #cat raw_perf.txt |sed -n '/Summary:/,$p'  >>  $LOGFILE
        #echo "TEST: $COUNTER, $(tail raw_perf.txt |grep "real"|cut -f2- ), MLIR(FSD CNV DOT), $testcase, $params, $datatype, $(grep 'Total time:' raw_perf.txt) " >> $LOGSUMMARYFILE
        #sleep 5
    done

done <<TESTLIST
/models/mlperf/resnet50_v1.onnx --batch 1
/models/mlperf/resnet50_v1.onnx --batch 64
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 1 384
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 32 384 --batch 32
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 64 384 --batch 64
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 1 32
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 32 32 --batch 32
/models/ORT/onnx_models/bert_base_cased_1.onnx  --fill1 input_ids --input-dim @input_ids 64 32 --batch 64
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 1 384
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 16 384 --batch 16
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 32 384 --batch 32
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 1 32
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 16 32 --batch 16
/models/ORT/onnx_models/bert_large_uncased_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 32 32 --batch 32
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 1 384
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 8 384 --batch 8
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 16 384 --batch 16
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 1 32
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 8 32 --batch 8
/models/ORT/onnx_models/distilgpt2_1_fp16_gpu.onnx  --fill1 input_ids --input-dim @input_ids 16 32 --batch 16
/models/onnx-model-zoo/gpt2-10.onnx --batch 1
/models/bert/bertsquad-12.onnx --fill1 input_ids:0 --fill1 input_mask:0 --fill1 segment_ids:0
/models/bert/bert_squad_mlperf_1_1.onnx --fill1 input_ids --fill1 input_mask --fill1 segment_ids
/models/torchvision/resnet50i64.onnx --batch 64
/models/torchvision/densenet121i32.onnx --batch 32
/models/torchvision/inceptioni32.onnx --batch 32
/models/cadene/inceptionv4i16.onnx --batch 16
/models/cadene/resnext101_64x4di16.onnx --batch 16
/models/slim/mobilenet_i64.pb --batch 64
/models/slim/nasnet_i64.pb --batch 64
/models/slim/resnet50v2_i64.pb --batch 64
/models/huggingface-transformers/bert_mrpc8.onnx --fill1 input.1 --fill1 input.5 --fill1 onnx::Unsqueeze_1 --onnx --batch 8
/models/tf-misc/bert_mrpc1.pb --fill1 input_ids_1 --fill1 segment_ids_1 --fill1 input_mask_1 --tf --batch 1
/models/pytorch-examples/wlang_gru.onnx --fill0 input.1 --onnx
/models/pytorch-examples/wlang_lstm.onnx --fill0 input.1 --onnx
/models/torchvision/resnet50i1.onnx
/models/torchvision/inceptioni1.onnx
/models/cadene/dpn92i1.onnx
/models/cadene/resnext101_64x4di1.onnx
/models/slim/vgg16_i1.pb
/models/slim/mobilenet_i1.pb
/models/slim/inceptionv4_i1.pb
/models/onnx-misc/taau_low_res_downsample_d2s_for_infer_time_fp16_opset11.onnx --input-dim @inputs 1 1920 1080 8
/models/agentmodel/AgentModel.onnx
/models/sd/unet/model.onnx --input-dim @sample 2 4 64 64 @timestep 1 @encoder_hidden_states 2 64 1024
/models/bert/bert-large-uncased.onnx --input-dim @input_ids 32 32 @attention_mask 32 32 @token_type_ids 32 32 --fill1 input_ids attention_mask token_type_ids --batch 32
/models/bert/bert-large-uncased.onnx --input-dim @input_ids 32 384 @attention_mask 32 384 @token_type_ids 32 384 --fill1 input_ids attention_mask token_type_ids --batch 32
/models/bert/bert-large-uncased.onnx --input-dim @input_ids 1 32 @attention_mask 1 32 @token_type_ids 1 32 --fill1 input_ids attention_mask token_type_ids
/models/bert/bert-large-uncased.onnx --input-dim @input_ids 1 384 @attention_mask 1 384 @token_type_ids 1 384 --fill1 input_ids attention_mask token_type_ids
TESTLIST

